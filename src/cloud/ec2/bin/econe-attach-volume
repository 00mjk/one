#!/usr/bin/env ruby
# -------------------------------------------------------------------------- #
# Copyright 2002-2012, OpenNebula Project Leads (OpenNebula.org)             #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

ONE_LOCATION=ENV["ONE_LOCATION"]

if !ONE_LOCATION
    RUBY_LIB_LOCATION="/usr/lib/one/ruby"
else
    RUBY_LIB_LOCATION=ONE_LOCATION+"/lib/ruby"
end


$: << RUBY_LIB_LOCATION
$: << RUBY_LIB_LOCATION+"/cloud"

COMMANDS_HELP=<<-EOT
econe-attach-volume

Attaches a DATABLOCK to a running instance and exposes it as the specified device.

Usage:
    econe-attach-volume [OPTIONS] VOLUME-ID

Options:

    --help, -h
        Show help

    --access-key <id>, -K <id>
        The username of the user

    --secret-key <key>, -S <key>
        The password of the user

    --url <url>, -U <url>
        Set url as the web service url to use

    --instance <instance_id>, -i <instance_id>
        The ID of the instance to attach the volume to

    --device <device>, -d <device
        Specifies the device name to expose to the instance.
        Example: -d /dev/sdf

    --headers, -H
        Display column headers

VOLUME-ID: The ID of the DATABLOCK

EOT

require 'econe/EC2QueryClient'
require 'CloudClient'
require 'getoptlong'

include CloudCLI

opts = GetoptLong.new(
            ['--help',       '-h',GetoptLong::NO_ARGUMENT],
            ['--version',    '-v',GetoptLong::NO_ARGUMENT],
            ['--access-key', '-K',GetoptLong::REQUIRED_ARGUMENT],
            ['--secret-key', '-S',GetoptLong::REQUIRED_ARGUMENT],
            ['--url',        '-U',GetoptLong::REQUIRED_ARGUMENT],
            ['--instance',   '-i',GetoptLong::REQUIRED_ARGUMENT],
            ['--device',     '-d',GetoptLong::REQUIRED_ARGUMENT],
            ['--headers',    '-H',GetoptLong::NO_ARGUMENT]
       )

headers = false
url     = nil
access  = nil
secret  = nil
auth    = nil
instance = nil
device = nil

begin
    opts.each do |opt, arg|
        case opt
            when '--help'
                puts COMMANDS_HELP
                return
            when '--version'
                puts CloudCLI.version_text
                exit 0
            when '--access-key'
                access = arg
            when '--secret-key'
                secret = arg
            when '--url'
                url = arg
            when '--instance'
                instance = arg
            when '--headers'
                headers = true
            when '--device'
                device = arg
        end
    end
rescue Exception => e
    exit -1
end

volume_id = ARGV.shift

if !volume_id
    puts "#{cmd_name}: missing VOLUME-ID parameter"
    exit -1
end

auth = "#{access}:#{secret}" if secret && access

begin
    ec2_client = EC2QueryClient::Client.new(auth,url)
rescue Exception => e
    puts "#{cmd_name}: #{e.message}"
    exit -1
end

rc = ec2_client.attach_volume(volume_id, instance, device)

if CloudClient::is_error?(rc)
    puts "#{cmd_name}: #{rc.message}"
    exit -1
end

fmt = "%-15s %-15s %-10s %s"

if headers
    puts fmt % ["volumeId", "instanceId", "status", "device"]
    puts "------------------------------------------------------------------------------"
end

puts fmt % [rc['volumeId'], rc['instanceId'], rc['status'], rc['device']]

exit 0
